//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wSrvBridge.TestConsole.PermissionServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionQueryResult", Namespace="http://schemas.datacontract.org/2004/07/wSrvLocatorLibrary")]
    [System.SerializableAttribute()]
    public partial class PermissionQueryResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifyUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifyDate {
            get {
                return this.ModifyDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifyDateField, value) != true)) {
                    this.ModifyDateField = value;
                    this.RaisePropertyChanged("ModifyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifyUser {
            get {
                return this.ModifyUserField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifyUserField, value) != true)) {
                    this.ModifyUserField = value;
                    this.RaisePropertyChanged("ModifyUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Permission {
            get {
                return this.PermissionField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionField, value) != true)) {
                    this.PermissionField = value;
                    this.RaisePropertyChanged("Permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Permission", Namespace="http://schemas.datacontract.org/2004/07/wSrvLocatorLibrary")]
    public enum Permission : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermissionGranted = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermissionDenied = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PermissionServiceReference.IPermissionQueryService")]
    public interface IPermissionQueryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermissionQueryService/GetServicePermission", ReplyAction="http://tempuri.org/IPermissionQueryService/GetServicePermissionResponse")]
        wSrvBridge.TestConsole.PermissionServiceReference.PermissionQueryResult GetServicePermission(string msisdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermissionQueryService/GetServicePermission", ReplyAction="http://tempuri.org/IPermissionQueryService/GetServicePermissionResponse")]
        System.Threading.Tasks.Task<wSrvBridge.TestConsole.PermissionServiceReference.PermissionQueryResult> GetServicePermissionAsync(string msisdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermissionQueryService/WriteServicePermission", ReplyAction="http://tempuri.org/IPermissionQueryService/WriteServicePermissionResponse")]
        wSrvBridge.TestConsole.PermissionServiceReference.PermissionQueryResult WriteServicePermission(string msisdn, wSrvBridge.TestConsole.PermissionServiceReference.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermissionQueryService/WriteServicePermission", ReplyAction="http://tempuri.org/IPermissionQueryService/WriteServicePermissionResponse")]
        System.Threading.Tasks.Task<wSrvBridge.TestConsole.PermissionServiceReference.PermissionQueryResult> WriteServicePermissionAsync(string msisdn, wSrvBridge.TestConsole.PermissionServiceReference.Permission permission);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPermissionQueryServiceChannel : wSrvBridge.TestConsole.PermissionServiceReference.IPermissionQueryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PermissionQueryServiceClient : System.ServiceModel.ClientBase<wSrvBridge.TestConsole.PermissionServiceReference.IPermissionQueryService>, wSrvBridge.TestConsole.PermissionServiceReference.IPermissionQueryService {
        
        public PermissionQueryServiceClient() {
        }
        
        public PermissionQueryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PermissionQueryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermissionQueryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermissionQueryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public wSrvBridge.TestConsole.PermissionServiceReference.PermissionQueryResult GetServicePermission(string msisdn) {
            return base.Channel.GetServicePermission(msisdn);
        }
        
        public System.Threading.Tasks.Task<wSrvBridge.TestConsole.PermissionServiceReference.PermissionQueryResult> GetServicePermissionAsync(string msisdn) {
            return base.Channel.GetServicePermissionAsync(msisdn);
        }
        
        public wSrvBridge.TestConsole.PermissionServiceReference.PermissionQueryResult WriteServicePermission(string msisdn, wSrvBridge.TestConsole.PermissionServiceReference.Permission permission) {
            return base.Channel.WriteServicePermission(msisdn, permission);
        }
        
        public System.Threading.Tasks.Task<wSrvBridge.TestConsole.PermissionServiceReference.PermissionQueryResult> WriteServicePermissionAsync(string msisdn, wSrvBridge.TestConsole.PermissionServiceReference.Permission permission) {
            return base.Channel.WriteServicePermissionAsync(msisdn, permission);
        }
    }
}
