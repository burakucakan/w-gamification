//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gnc2.Service.ServiceBadge {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BadgeListQueryReq", Namespace="http://schemas.datacontract.org/2004/07/w2.Ws")]
    [System.SerializableAttribute()]
    public partial class BadgeListQueryReq : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MsisdnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NTopField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Msisdn {
            get {
                return this.MsisdnField;
            }
            set {
                if ((object.ReferenceEquals(this.MsisdnField, value) != true)) {
                    this.MsisdnField = value;
                    this.RaisePropertyChanged("Msisdn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NTop {
            get {
                return this.NTopField;
            }
            set {
                if ((this.NTopField.Equals(value) != true)) {
                    this.NTopField = value;
                    this.RaisePropertyChanged("NTop");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseResponse", Namespace="http://schemas.datacontract.org/2004/07/w2.Service.Gigya")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gnc2.Service.ServiceBadge.BaseWsModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gnc2.Service.ServiceBadge.BadgeUserListModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gnc2.Service.ServiceBadge.BadgeListQueryRequest))]
    public partial class BaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallId {
            get {
                return this.CallIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CallIdField, value) != true)) {
                    this.CallIdField = value;
                    this.RaisePropertyChanged("CallId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseWsModel", Namespace="http://schemas.datacontract.org/2004/07/w2.Ws.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gnc2.Service.ServiceBadge.BadgeUserListModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gnc2.Service.ServiceBadge.BadgeListQueryRequest))]
    public partial class BaseWsModel : Gnc2.Service.ServiceBadge.BaseResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BadgeUserListModel", Namespace="http://schemas.datacontract.org/2004/07/w2.Ws")]
    [System.SerializableAttribute()]
    public partial class BadgeUserListModel : Gnc2.Service.ServiceBadge.BaseWsModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gnc2.Service.ServiceBadge.UserBadgeModel[] BadgesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gnc2.Service.ServiceBadge.UserBadgeModel[] Badges {
            get {
                return this.BadgesField;
            }
            set {
                if ((object.ReferenceEquals(this.BadgesField, value) != true)) {
                    this.BadgesField = value;
                    this.RaisePropertyChanged("Badges");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BadgeListQueryRequest", Namespace="http://schemas.datacontract.org/2004/07/w2.Ws")]
    [System.SerializableAttribute()]
    public partial class BadgeListQueryRequest : Gnc2.Service.ServiceBadge.BaseWsModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gnc2.Service.ServiceBadge.BadgeModel[] BadgesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gnc2.Service.ServiceBadge.BadgeModel[] Badges {
            get {
                return this.BadgesField;
            }
            set {
                if ((object.ReferenceEquals(this.BadgesField, value) != true)) {
                    this.BadgesField = value;
                    this.RaisePropertyChanged("Badges");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BadgeModel", Namespace="http://schemas.datacontract.org/2004/07/w2.Ws")]
    [System.SerializableAttribute()]
    public partial class BadgeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBadgeModel", Namespace="http://schemas.datacontract.org/2004/07/w2.Ws")]
    [System.SerializableAttribute()]
    public partial class UserBadgeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BadgeURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChallengeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Points7DaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Rank7DaysField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BadgeURL {
            get {
                return this.BadgeURLField;
            }
            set {
                if ((object.ReferenceEquals(this.BadgeURLField, value) != true)) {
                    this.BadgeURLField = value;
                    this.RaisePropertyChanged("BadgeURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChallengeID {
            get {
                return this.ChallengeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChallengeIDField, value) != true)) {
                    this.ChallengeIDField = value;
                    this.RaisePropertyChanged("ChallengeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Points7Days {
            get {
                return this.Points7DaysField;
            }
            set {
                if ((this.Points7DaysField.Equals(value) != true)) {
                    this.Points7DaysField = value;
                    this.RaisePropertyChanged("Points7Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PointsTotal {
            get {
                return this.PointsTotalField;
            }
            set {
                if ((this.PointsTotalField.Equals(value) != true)) {
                    this.PointsTotalField = value;
                    this.RaisePropertyChanged("PointsTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank7Days {
            get {
                return this.Rank7DaysField;
            }
            set {
                if ((this.Rank7DaysField.Equals(value) != true)) {
                    this.Rank7DaysField = value;
                    this.RaisePropertyChanged("Rank7Days");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceBadge.IBadge")]
    public interface IBadge {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/GetAll", ReplyAction="http://tempuri.org/IBadge/GetAllResponse")]
        Gnc2.Service.ServiceBadge.BadgeListQueryRequest GetAll(Gnc2.Service.ServiceBadge.BadgeListQueryReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/GetAll", ReplyAction="http://tempuri.org/IBadge/GetAllResponse")]
        System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.BadgeListQueryRequest> GetAllAsync(Gnc2.Service.ServiceBadge.BadgeListQueryReq request);
        
        // CODEGEN: Generating message contract since the wrapper name (Json_x002F_GetAll) of message Json_x002F_GetAllRequest does not match the default value (JsonGetAll)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/Json/GetAll", ReplyAction="http://tempuri.org/IBadge/Json/GetAllResponse")]
        Gnc2.Service.ServiceBadge.JsonGetAllResponse JsonGetAll(Gnc2.Service.ServiceBadge.JsonGetAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/Json/GetAll", ReplyAction="http://tempuri.org/IBadge/Json/GetAllResponse")]
        System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.JsonGetAllResponse> JsonGetAllAsync(Gnc2.Service.ServiceBadge.JsonGetAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/GetNRandom", ReplyAction="http://tempuri.org/IBadge/GetNRandomResponse")]
        Gnc2.Service.ServiceBadge.BadgeListQueryRequest GetNRandom(Gnc2.Service.ServiceBadge.BadgeListQueryReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/GetNRandom", ReplyAction="http://tempuri.org/IBadge/GetNRandomResponse")]
        System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.BadgeListQueryRequest> GetNRandomAsync(Gnc2.Service.ServiceBadge.BadgeListQueryReq request);
        
        // CODEGEN: Generating message contract since the wrapper name (Json_x002F_GetNRandom) of message Json_x002F_GetNRandomRequest does not match the default value (JsonGetNRandom)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/Json/GetNRandom", ReplyAction="http://tempuri.org/IBadge/Json/GetNRandomResponse")]
        Gnc2.Service.ServiceBadge.JsonGetNRandomResponse JsonGetNRandom(Gnc2.Service.ServiceBadge.JsonGetNRandomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/Json/GetNRandom", ReplyAction="http://tempuri.org/IBadge/Json/GetNRandomResponse")]
        System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.JsonGetNRandomResponse> JsonGetNRandomAsync(Gnc2.Service.ServiceBadge.JsonGetNRandomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/GetUserBadge", ReplyAction="http://tempuri.org/IBadge/GetUserBadgeResponse")]
        Gnc2.Service.ServiceBadge.BadgeUserListModel GetUserBadge(Gnc2.Service.ServiceBadge.BadgeListQueryReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/GetUserBadge", ReplyAction="http://tempuri.org/IBadge/GetUserBadgeResponse")]
        System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.BadgeUserListModel> GetUserBadgeAsync(Gnc2.Service.ServiceBadge.BadgeListQueryReq request);
        
        // CODEGEN: Generating message contract since the wrapper name (Json_x002F_GetUserBadge) of message Json_x002F_GetUserBadgeRequest does not match the default value (JsonGetUserBadge)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/Json/GetUserBadge", ReplyAction="http://tempuri.org/IBadge/Json/GetUserBadgeResponse")]
        Gnc2.Service.ServiceBadge.JsonGetUserBadgeResponse JsonGetUserBadge(Gnc2.Service.ServiceBadge.JsonGetUserBadgeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBadge/Json/GetUserBadge", ReplyAction="http://tempuri.org/IBadge/Json/GetUserBadgeResponse")]
        System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.JsonGetUserBadgeResponse> JsonGetUserBadgeAsync(Gnc2.Service.ServiceBadge.JsonGetUserBadgeRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Json/GetAll", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class JsonGetAllRequest {
        
        public JsonGetAllRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Json/GetAllResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class JsonGetAllResponse {
        
        public JsonGetAllResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Json/GetNRandom", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class JsonGetNRandomRequest {
        
        public JsonGetNRandomRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Json/GetNRandomResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class JsonGetNRandomResponse {
        
        public JsonGetNRandomResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Json/GetUserBadge", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class JsonGetUserBadgeRequest {
        
        public JsonGetUserBadgeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Json/GetUserBadgeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class JsonGetUserBadgeResponse {
        
        public JsonGetUserBadgeResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBadgeChannel : Gnc2.Service.ServiceBadge.IBadge, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BadgeClient : System.ServiceModel.ClientBase<Gnc2.Service.ServiceBadge.IBadge>, Gnc2.Service.ServiceBadge.IBadge {
        
        public BadgeClient() {
        }
        
        public BadgeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BadgeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BadgeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BadgeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Gnc2.Service.ServiceBadge.BadgeListQueryRequest GetAll(Gnc2.Service.ServiceBadge.BadgeListQueryReq request) {
            return base.Channel.GetAll(request);
        }
        
        public System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.BadgeListQueryRequest> GetAllAsync(Gnc2.Service.ServiceBadge.BadgeListQueryReq request) {
            return base.Channel.GetAllAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gnc2.Service.ServiceBadge.JsonGetAllResponse Gnc2.Service.ServiceBadge.IBadge.JsonGetAll(Gnc2.Service.ServiceBadge.JsonGetAllRequest request) {
            return base.Channel.JsonGetAll(request);
        }
        
        public void JsonGetAll() {
            Gnc2.Service.ServiceBadge.JsonGetAllRequest inValue = new Gnc2.Service.ServiceBadge.JsonGetAllRequest();
            Gnc2.Service.ServiceBadge.JsonGetAllResponse retVal = ((Gnc2.Service.ServiceBadge.IBadge)(this)).JsonGetAll(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.JsonGetAllResponse> Gnc2.Service.ServiceBadge.IBadge.JsonGetAllAsync(Gnc2.Service.ServiceBadge.JsonGetAllRequest request) {
            return base.Channel.JsonGetAllAsync(request);
        }
        
        public System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.JsonGetAllResponse> JsonGetAllAsync() {
            Gnc2.Service.ServiceBadge.JsonGetAllRequest inValue = new Gnc2.Service.ServiceBadge.JsonGetAllRequest();
            return ((Gnc2.Service.ServiceBadge.IBadge)(this)).JsonGetAllAsync(inValue);
        }
        
        public Gnc2.Service.ServiceBadge.BadgeListQueryRequest GetNRandom(Gnc2.Service.ServiceBadge.BadgeListQueryReq request) {
            return base.Channel.GetNRandom(request);
        }
        
        public System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.BadgeListQueryRequest> GetNRandomAsync(Gnc2.Service.ServiceBadge.BadgeListQueryReq request) {
            return base.Channel.GetNRandomAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gnc2.Service.ServiceBadge.JsonGetNRandomResponse Gnc2.Service.ServiceBadge.IBadge.JsonGetNRandom(Gnc2.Service.ServiceBadge.JsonGetNRandomRequest request) {
            return base.Channel.JsonGetNRandom(request);
        }
        
        public void JsonGetNRandom() {
            Gnc2.Service.ServiceBadge.JsonGetNRandomRequest inValue = new Gnc2.Service.ServiceBadge.JsonGetNRandomRequest();
            Gnc2.Service.ServiceBadge.JsonGetNRandomResponse retVal = ((Gnc2.Service.ServiceBadge.IBadge)(this)).JsonGetNRandom(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.JsonGetNRandomResponse> Gnc2.Service.ServiceBadge.IBadge.JsonGetNRandomAsync(Gnc2.Service.ServiceBadge.JsonGetNRandomRequest request) {
            return base.Channel.JsonGetNRandomAsync(request);
        }
        
        public System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.JsonGetNRandomResponse> JsonGetNRandomAsync() {
            Gnc2.Service.ServiceBadge.JsonGetNRandomRequest inValue = new Gnc2.Service.ServiceBadge.JsonGetNRandomRequest();
            return ((Gnc2.Service.ServiceBadge.IBadge)(this)).JsonGetNRandomAsync(inValue);
        }
        
        public Gnc2.Service.ServiceBadge.BadgeUserListModel GetUserBadge(Gnc2.Service.ServiceBadge.BadgeListQueryReq request) {
            return base.Channel.GetUserBadge(request);
        }
        
        public System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.BadgeUserListModel> GetUserBadgeAsync(Gnc2.Service.ServiceBadge.BadgeListQueryReq request) {
            return base.Channel.GetUserBadgeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gnc2.Service.ServiceBadge.JsonGetUserBadgeResponse Gnc2.Service.ServiceBadge.IBadge.JsonGetUserBadge(Gnc2.Service.ServiceBadge.JsonGetUserBadgeRequest request) {
            return base.Channel.JsonGetUserBadge(request);
        }
        
        public void JsonGetUserBadge() {
            Gnc2.Service.ServiceBadge.JsonGetUserBadgeRequest inValue = new Gnc2.Service.ServiceBadge.JsonGetUserBadgeRequest();
            Gnc2.Service.ServiceBadge.JsonGetUserBadgeResponse retVal = ((Gnc2.Service.ServiceBadge.IBadge)(this)).JsonGetUserBadge(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.JsonGetUserBadgeResponse> Gnc2.Service.ServiceBadge.IBadge.JsonGetUserBadgeAsync(Gnc2.Service.ServiceBadge.JsonGetUserBadgeRequest request) {
            return base.Channel.JsonGetUserBadgeAsync(request);
        }
        
        public System.Threading.Tasks.Task<Gnc2.Service.ServiceBadge.JsonGetUserBadgeResponse> JsonGetUserBadgeAsync() {
            Gnc2.Service.ServiceBadge.JsonGetUserBadgeRequest inValue = new Gnc2.Service.ServiceBadge.JsonGetUserBadgeRequest();
            return ((Gnc2.Service.ServiceBadge.IBadge)(this)).JsonGetUserBadgeAsync(inValue);
        }
    }
}
